# Problem set 4 

# Load Libraries and datasets
```{r}
library(ggplot2)
library(gridExtra)
data("diamonds")
```

# Diamons exploration
```{r}
dim(diamonds)
summary(diamonds)
# Best color for a diamond
diamonds$color
?diamonds
```

# Create a histogram of the price of
# all the diamonds in the diamond data set.
```{r}
qplot(x = price, data=diamonds)
```

# Shape and center of the price distribution 
```{r}
summary(diamonds$price)
?diamonds
```

# How many diamonds cost: 
```{r}
# less than 500 
sum(diamonds$price < 500)

# less than 250
sum(diamonds$price < 250)

# greater than 15000 
sum(diamonds$price >= 15000)
```

#  Explore the largest peak in the
# price histogram you created earlier.
```{r}
qplot(x = price, data=diamonds, binwidth=100) +
  scale_x_continuous(limits=c(0,5000), breaks=seq(0,5000,1000))
```

# Break out the histogram of diamond prices by cut.
```{r}
qplot(x = price, data=diamonds, binwidth=100) +
  scale_x_continuous(limits=c(0,5000), breaks=seq(0,5000,1000)) + 
  facet_wrap(~cut)
```

# Price by cut 
```{r}
by(diamonds$price, diamonds$cut, summary)
```

# Break out the histogram of diamond prices by cut but y axis should vary accordingly 
```{r}
qplot(x = price, data=diamonds, binwidth=100, color=I('purple'), fill = I('#eae2ff')) +
  scale_x_continuous(limits=c(0,5000), breaks=seq(0,5000,1000)) + 
  facet_wrap(~cut, scales = "free_y")
```


# Create a histogram of price per carat
# and facet it by cut. You can make adjustments
# to the code from the previous exercise to get
# started.

# Adjust the bin width and transform the scale
# of the x-axis using log10.
```{r}
qplot(x = (price/carat), data=diamonds, color=I('purple'), fill = I('#eae2ff'), 
      binwidth=0.1 ) +
  xlab("Price") + 
  ylab("Carat") +
  facet_wrap(~cut, scales = "free_y") + scale_x_log10()

```

# Investigate the price of diamonds using box plots,
# numerical summaries, and one of the following categorical
# variables: cut, clarity, or color.
```{r}
qplot(x=cut, y=price,
        data =subset(diamonds, !is.na(cut)), 
        geom='boxplot') + 
        coord_cartesian(ylim =c(300,6500))

qplot(x=color, y=price,
        data =subset(diamonds, !is.na(color)), 
        geom='boxplot') + 
        coord_cartesian(ylim =c(100,8000))

IQR(subset(diamonds, color == "D")$price)
IQR(subset(diamonds, color == "J")$price)
by(diamonds$price, diamonds$color, summary)
```

